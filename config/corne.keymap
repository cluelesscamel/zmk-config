/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COL 0
#define QWE 1
#define GAM 2
#define NUM 3
#define SYM 4
#define FUN 5
#define NAV 6
#define LCK 7

&mt {
    tapping-term-ms = <200>;
	flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
	flavor = "tap-preferred";
};

/ {
		behaviors {
			unlock: unlock_keyboard {
				compatible = "zmk,behavior-mod-morph";
				label = "UNLOCK_KEYBOARD";
				#binding-cells = <0>;
				bindings = <&none>, <&tog LCK>;
				mods = <(MOD_LSFT)>;
			};
		};

        keymap {
                compatible = "zmk,keymap";

                colemak {
                        bindings = <
   &none  &kp Q      &kp W       &kp F       &kp P       &kp G       &kp J &kp L     &kp U       &kp Y       &kp SQT   &none
   &none  &mt LALT A &mt LSHFT R &mt LCTRL S &lt SYM T   &kp D       &kp H &lt SYM N &mt RCTRL E &mt RSHFT I &mt LALT O &none
   &none  &mt RALT Z &kp X       &kp C       &kp V       &kp B       &kp K &kp M     &kp COMMA   &kp DOT     &kp FSLH   &none
                                 &lt FUN TAB &kp LGUI &lt NUM RET &lt NAV ESC &kp SPACE   &kp BSPC
                        >;
                };

                qwerty {
                        bindings = <
   &none  &kp Q      &kp W       &kp E       &kp R       &kp T       &kp Y &kp U     &kp I       &kp O       &kp P         &none
   &none  &mt LALT A &mt LSHFT S &mt LCTRL D &lt SYM F   &kp G       &kp H &lt SYM J &mt RCTRL K &mt RSHFT L &mt LALT SEMI &none
   &none  &mt RALT Z &kp X       &kp C       &kp V       &kp B       &kp N &kp M     &kp COMMA   &kp DOT     &kp FSLH      &none
                                 &lt FUN TAB &kp LGUI &lt NUM RET &lt NAV ESC &kp SPACE   &kp BSPC
                        >;
                };

                games {
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp N1  &kp Y &kp U &kp I     &kp O   &kp P    &none
   &none &kp A &kp S &kp D &kp F &kp N2  &kp H &kp J &kp K     &kp L   &kp SEMI &none
   &none &kp Z &kp X &kp C &kp V &kp N3  &kp N &kp M &kp COMMA &kp DOT &kp FSLH &none
                      &kp LCTRL &kp SPACE &kp RET &to QWE &kp SPACE   &kp BSPC
                        >;
                };

                numbers {
                        bindings = <
   &none  &to COL  &kp LC(X)  &kp LC(C)  &kp LC(V)  &none       &kp MINUS &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp FSLH &none
   &none  &to GAM  &kp LG(N1) &kp LG(N2) &kp LG(N3) &none       &kp PLUS  &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp STAR &none
   &none  &to QWE  &kp LG(N4) &kp LG(N5) &kp LG(N6) &kp LG(N7)  &kp EQUAL &kp KP_N1 &kp KP_N2 &kp KP_N3 &none    &none
                          &kp KP_NUM &none &trans &mt LALT SPACE &mt LSHIFT N0 &kp DOT
                        >;
                };

                symbols {
                        bindings = <
   &none &kp CARET &kp HASH &kp DLLR &kp PRCNT &kp LT	 &kp QMARK &kp LPAR &kp RPAR &kp DQT   &kp SQT   &none
   &none &kp STAR  &kp EXCL &kp PLUS &kp EQUAL &kp GT    &kp MINUS &kp LBRC &kp RBRC &kp COLON &kp SEMI  &none
   &none &kp FSLH  &kp BSLH &kp PIPE &kp AMPS  &kp AT    &kp UNDER &kp LBKT &kp RBKT &kp TILDE &kp GRAVE &none
                            &none &none &none &none &kp SPACE &none
                        >;
                };

                function {
                        bindings = <
   &none &kp F1  &kp F2  &kp F3 &kp F4      &kp F5   &tog LCK     &none        &none        &none        &bt BT_CLR   &none
   &none &kp F6  &kp F7  &kp F8 &kp F9      &kp F10  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
   &none &kp F11 &kp F12 &none  &bootloader &reset   &reset       &bootloader  &none        &none        &none        &none
                            &trans &none &none &none &none &kp LALT
                        >;
                };

                navigation {
                        bindings = <
   &none &none    &kp C_MUTE       &kp C_VOL_DN   &kp C_VOL_UP &none  &none    &kp HOME  &kp END   &none     &kp SLCK        &none
   &none &kp LALT &mt LSHFT C_PREV &mt LCTRL C_PP &kp C_NEXT   &none  &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp PSCRN       &none
   &none &none    &none            &none          &none        &none  &none    &kp PG_DN &kp PG_UP &none     &kp PAUSE_BREAK &none
                            &kp DEL &kp LGUI &kp CAPS &trans &kp SPACE &none
                        >;
                };

                locked {
                        bindings = <
   &none &none &none &none     &none &none  &none &none &none   &none &none &none
   &none &none &none &kp LSHFT &none &none  &none &none &unlock &none &none &none
   &none &none &none &none     &none &none  &none &none &none   &none &none &none
                      &none &none &none &none &none &none
                        >;
                };
        };
};
